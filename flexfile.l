%option noyywrap
%{
#include <string.h>
#include "parser.tab.h"  // Include the header generated by Bison

%}

DIGIT       [0-9]
LETTER      [a-zA-Z]
ID          ({LETTER}|_)({LETTER}|{DIGIT}|_)*
INTEGER     {DIGIT}+
REAL        {INTEGER}"."{DIGIT}*
ASSIGN_INT  {INTEGER}":="
ASSIGN_REAL {REAL}":="

%%

"integer"   { return INTEGER_TYPE; }
"real"      { return REAL_TYPE; }
{ASSIGN_INT}    { return ASSIGN_INT; }
{ASSIGN_REAL}   { return ASSIGN_REAL; }
{ID}        { yylval.sval = strdup(yytext); return ID; }
{INTEGER}   { yylval.ival = atoi(yytext); return INTEGER; }
{REAL}      { yylval.rval = atof(yytext); return REAL; }
":="        { return ASSIGN_OP; }
":"         { return COLON; }
"+"         { return ADD; } // Token for addition
"-"         { return SUB; } // Token for subtraction
"*"         { return MUL; } // Token for multiplication
"/"         { return DIV; } // Token for division
"^"         { return EXP; } // Token for exponentiation
"("         { return LPAREN; } // Add rule for "("
")"         { return RPAREN; } // Add rule for ")"
","         { return COMMA; }
";"         { return SEMICOLON; }
[ \t\n]+    { /* Ignore whitespace */ }
.           { printf("ERROR: Unrecognized character or sequence %s\n", yytext); return yytext[0]; }

%%